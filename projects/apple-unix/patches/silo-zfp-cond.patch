diff -u -U5 -r silo-4.11-bsd/src/hdf5_drv/Makefile.in silo-4.11-bsd.zfp-cond/src/hdf5_drv/Makefile.in
--- silo-4.11-bsd/src/hdf5_drv/Makefile.in	2021-09-10 18:22:52.000000000 -0400
+++ silo-4.11-bsd.zfp-cond/src/hdf5_drv/Makefile.in	2022-09-13 10:14:19.521533050 -0400
@@ -164,11 +164,11 @@
 CONFIG_HEADER = $(top_builddir)/config.h
 CONFIG_CLEAN_FILES =
 CONFIG_CLEAN_VPATH_FILES =
 LTLIBRARIES = $(noinst_LTLIBRARIES)
 libsilo_hdf5_drv_la_LIBADD =
-am_libsilo_hdf5_drv_la_OBJECTS = silo_hdf5.lo H5FDsilo.lo H5Zzfp.lo
+am_libsilo_hdf5_drv_la_OBJECTS = silo_hdf5.lo H5FDsilo.lo 
 libsilo_hdf5_drv_la_OBJECTS = $(am_libsilo_hdf5_drv_la_OBJECTS)
 AM_V_lt = $(am__v_lt_@AM_V@)
 am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
 am__v_lt_0 = --silent
 am__v_lt_1 = 
@@ -413,11 +413,11 @@
 target_alias = @target_alias@
 top_build_prefix = @top_build_prefix@
 top_builddir = @top_builddir@
 top_srcdir = @top_srcdir@
 noinst_LTLIBRARIES = libsilo_hdf5_drv.la
-libsilo_hdf5_drv_la_SOURCES = silo_hdf5.c H5FDsilo.c H5Zzfp.c
+libsilo_hdf5_drv_la_SOURCES = silo_hdf5.c H5FDsilo.c 
 #libsilo_H5FDsilo_la_SOURCES = H5FDsilo.c
 AM_CPPFLAGS = -I$(builddir)/../silo -I$(srcdir)/../silo \
 	$(am__append_1) $(am__append_2) $(am__append_3)
 noinst_HEADERS = \
  silo_hdf5_private.h \
diff -u -U5 -r silo-4.11-bsd/src/hdf5_drv/silo_hdf5.c silo-4.11-bsd.zfp-cond/src/hdf5_drv/silo_hdf5.c
--- silo-4.11-bsd/src/hdf5_drv/silo_hdf5.c	2021-09-10 18:22:52.000000000 -0400
+++ silo-4.11-bsd.zfp-cond/src/hdf5_drv/silo_hdf5.c	2022-09-12 18:18:44.050363544 -0400
@@ -3339,12 +3339,14 @@
 #endif
         if (DB_HDF5_FPZIP_ID==filtn)
             have_fpzip = TRUE;
         if (DB_HDF5_HZIP_ID==filtn)
             have_hzip = TRUE;
+#if HAVE_ZFP
         if (H5Z_FILTER_ZFP==filtn)
             have_zfp = TRUE;
+#endif
     }
 #warning WHAT ABOUT NULL RETURN FROM DBGETCOMPRESSION
 /* Handle some global compression parameters */
     if ((ptr=(char *)strstr(DBGetCompressionFile(dbfile), 
        "ERRMODE=")) != (char *)NULL) 
@@ -3649,15 +3651,17 @@
           {
               db_perror(DBGetCompressionFile(dbfile), E_COMPRESSION, me);
               return -1;
           }
 
+#if HAVE_ZFP
           if (H5Pset_filter(P_ckcrprops, H5Z_FILTER_ZFP, opt_flag, cd_nelmts, cd_values)<0)
           {
               db_perror("H5Pset_filter", E_CALLFAIL, me);
               return (-1);
           }
+#endif
        }
     }
 #endif
     else
     {
